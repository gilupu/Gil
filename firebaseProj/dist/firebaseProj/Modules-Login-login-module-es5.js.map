{"version":3,"sources":["webpack:///src/app/Modules/Login/Pages/LoginPage/login.component.html","webpack:///src/app/Modules/Login/Pages/LoginPage/login.component.ts","webpack:///src/app/Modules/Login/Services/Auth.service.ts","webpack:///src/app/Modules/Login/login-routing.module.ts","webpack:///src/app/Modules/Login/login.module.ts"],"names":["LoginComponent","authService","mandatoryFieldsMissing","authenticationError","userFromInput","passFromInput","userName","value","passWord","SignIn","authenticationFailed","subscribe","data","event","userValue","userInput","nativeElement","passValue","passInput","length","GoogleAuth","GitHubAuth","inputFieldChange","authenticate","googleAuth","gitHubAuth","selector","templateUrl","styleUrls","AuthService","afs","afAuth","router","ngZone","authState","user","userData","localStorage","setItem","JSON","stringify","parse","getItem","email","password","signInWithEmailAndPassword","then","result","run","navigate","SetUserData","error","errorCode","code","errorMessage","message","next","createUserWithEmailAndPassword","window","alert","passwordResetEmail","sendPasswordResetEmail","AuthLogin","GoogleAuthProvider","GithubAuthProvider","provider","signInWithPopup","userRef","doc","uid","displayName","photoURL","emailVerified","set","merge","signOut","removeItem","providedIn","routes","path","component","LoginRoutingModule","forChild","imports","exports","LoginModule","declarations","providers"],"mappings":"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","file":"Modules-Login-login-module-es5.js","sourcesContent":["<div class=\"login-wrap\">\n\t<div class=\"login-html\">\n\t\t<input id=\"tab-1\" type=\"radio\" name=\"tab\" class=\"sign-in\" checked><label for=\"tab-1\" class=\"tab\">Sign In</label>\n\t\t<input id=\"tab-2\" type=\"radio\" name=\"tab\" class=\"sign-up\"><label for=\"tab-2\" class=\"tab\">Sign Up</label>\n\t\t<div class=\"login-form\">\n\t\t\t<div class=\"sign-in-htm\">\n\t\t\t\t<div class=\"group\">\n\t\t\t\t\t<label for=\"user\" class=\"label\">Username</label>\n\t\t\t\t\t<input id=\"user\" #user type=\"text\" (keyup)='inputFieldChange($event)' class=\"input\">\n\t\t\t\t</div>\n\t\t\t\t<div class=\"group\">\n\t\t\t\t\t<label for=\"pass\" class=\"label\">Password</label>\n\t\t\t\t\t<input id=\"pass\" #pass type=\"password\" class=\"input\" (keyup)='inputFieldChange($event)' data-type=\"password\">\n\t\t\t\t</div>\n\t\t\t\t<div class=\"group\">\n\t\t\t\t\t<input id=\"check\" type=\"checkbox\" class=\"check\" checked>\n\t\t\t\t\t<label for=\"check\"><span class=\"icon\"></span> Keep me Signed in</label>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"group\">\n\t\t\t\t\t<input type=\"submit\" class=\"button\" (click)='authenticate(user,pass)' [disabled]='mandatoryFieldsMissing' value=\"Sign In\">\n                </div>\n                <div>\n                    <img class='socialBanner' (click)='googleAuth()' src='assets/Images/GoogleAuthenticate.png'>\n                    <img class='socialBanner' (click)='gitHubAuth()' src='assets/Images/GitHubAuthentication.png'>\n                </div>\n                <div class='errorMsg' *ngIf='authenticationError'>Please check your password or UserName</div>\n\t\t\t\t<div class=\"hr\"></div>\n\t\t\t\t<div class=\"foot-lnk\">\n\t\t\t\t\t<a href=\"#forgot\">Forgot Password?</a>\n                </div>\n                \n\t\t\t</div>\n\t\t\t<div class=\"sign-up-htm\">\n\t\t\t\t<div class=\"group\">\n\t\t\t\t\t<label for=\"user\" class=\"label\">Username</label>\n\t\t\t\t\t<input id=\"user\" type=\"text\" class=\"input\">\n\t\t\t\t</div>\n\t\t\t\t<div class=\"group\">\n\t\t\t\t\t<label for=\"pass\" class=\"label\">Password</label>\n\t\t\t\t\t<input id=\"pass\" type=\"password\" class=\"input\" data-type=\"password\">\n\t\t\t\t</div>\n\t\t\t\t<div class=\"group\">\n\t\t\t\t\t<label for=\"pass\" class=\"label\">Repeat Password</label>\n\t\t\t\t\t<input id=\"pass\" type=\"password\" class=\"input\" data-type=\"password\">\n\t\t\t\t</div>\n\t\t\t\t<div class=\"group\">\n\t\t\t\t\t<label for=\"pass\" class=\"label\">Email Address</label>\n\t\t\t\t\t<input id=\"pass\" type=\"text\" class=\"input\">\n\t\t\t\t</div>\n\t\t\t\t<div class=\"group\">\n\t\t\t\t\t<input type=\"submit\" class=\"button\" value=\"Sign Up\">\n\t\t\t\t</div>\n\t\t\t\t<div class=\"hr\"></div>\n\t\t\t\t<div class=\"foot-lnk\">\n\t\t\t\t\t<label for=\"tab-1\">Already Member?</label>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</div>\n<div>\n</div>","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { AuthService } from '../../Services/Auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.less']\n})\nexport class LoginComponent implements OnInit {\n  @ViewChild('user') userInput: ElementRef;\n  @ViewChild('pass') passInput: ElementRef;\n  mandatoryFieldsMissing = true;\n  authenticationError = false;\n  constructor(private authService: AuthService) { }\n\n  ngOnInit(): void {\n  }\n\n  async authenticate(userFromInput,passFromInput) {\n    const userName = userFromInput.value;\n    const passWord = passFromInput.value;\n    this.authService.SignIn(userName,passWord);\n    \n    this.authService.authenticationFailed.subscribe((data) => {\n      if(data === true) {\n        this.authenticationError = true;\n      }\n    });\n  }\n\n  inputFieldChange(event) {\n    const userValue = this.userInput.nativeElement.value;\n    const passValue = this.passInput.nativeElement.value;\n\n    if(userValue && userValue.length > 0 && passValue && passValue.length> 0) {\n      this.mandatoryFieldsMissing = false;\n    } else {\n      this.mandatoryFieldsMissing = true;\n    }\n  }\n\n  googleAuth() {\n    this.authService.GoogleAuth();\n  }\n\n  gitHubAuth() {\n    this.authService.GitHubAuth();\n  }\n\n}\n","import { Injectable, NgZone } from '@angular/core';\r\n\r\nimport { auth } from 'firebase/app';\r\nimport { AngularFireAuth } from \"@angular/fire/auth\";\r\nimport { AngularFirestore, AngularFirestoreDocument } from '@angular/fire/firestore';\r\nimport { Router } from \"@angular/router\";\r\nimport { User } from '../shared/services/user';\r\nimport { Subject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class AuthService {\r\n  userData: any; // Save logged in user data\r\n  authenticationFailed : Subject<boolean> = new Subject();\r\n  constructor(\r\n    public afs: AngularFirestore,   // Inject Firestore service\r\n    public afAuth: AngularFireAuth, // Inject Firebase auth service\r\n    public router: Router,  \r\n    public ngZone: NgZone // NgZone service to remove outside scope warning\r\n  ) {    \r\n    /* Saving user data in localstorage when \r\n    logged in and setting up null when logged out */\r\n    this.afAuth.authState.subscribe(user => {\r\n      if (user) {\r\n        this.userData = user;\r\n        localStorage.setItem('user', JSON.stringify(this.userData));\r\n        JSON.parse(localStorage.getItem('user'));\r\n      } else {\r\n        localStorage.setItem('user', null);\r\n        JSON.parse(localStorage.getItem('user'));\r\n      }\r\n    })\r\n  }\r\n\r\n  // Sign in with email/password\r\n   SignIn(email, password){\r\n     this.afAuth.signInWithEmailAndPassword(email, password)\r\n      .then((result) => {\r\n        this.ngZone.run(() => {\r\n          this.router.navigate(['dashboard']);\r\n        });\r\n        this.SetUserData(result.user);\r\n        return true;\r\n      }).catch((error) => {\r\n        var errorCode = error.code;\r\n        var errorMessage = error.message; \r\n        this.authenticationFailed.next(true);\r\n      })\r\n  }\r\n\r\n  // Sign up with email/password\r\n  SignUp(email, password) {\r\n    return this.afAuth.createUserWithEmailAndPassword(email, password)\r\n      .then((result) => {\r\n        /* Call the SendVerificaitonMail() function when new user sign \r\n        up and returns promise */\r\n        // this.SendVerificationMail();\r\n        this.SetUserData(result.user);\r\n      }).catch((error) => {\r\n        window.alert(error.message)\r\n      })\r\n  }\r\n\r\n\r\n  // Reset Forggot password\r\n  ForgotPassword(passwordResetEmail) {\r\n    return this.afAuth.sendPasswordResetEmail(passwordResetEmail)\r\n    .then(() => {\r\n      window.alert('Password reset email sent, check your inbox.');\r\n    }).catch((error) => {\r\n      window.alert(error)\r\n    })\r\n  }\r\n\r\n  // Returns true when user is looged in and email is verified\r\n  get isLoggedIn(): boolean {\r\n    const user = JSON.parse(localStorage.getItem('user'));\r\n    return (user !== null && user.emailVerified !== false) ? true : false;\r\n  }\r\n\r\n  // Sign in with Google\r\n  GoogleAuth() {\r\n    return this.AuthLogin(new auth.GoogleAuthProvider());\r\n  }\r\n\r\n  GitHubAuth() {\r\n    return this.AuthLogin(new auth.GithubAuthProvider());\r\n  }\r\n\r\n  // Auth logic to run auth providers\r\n  AuthLogin(provider) {\r\n    return this.afAuth.signInWithPopup(provider)\r\n    .then((result) => {\r\n       this.ngZone.run(() => {\r\n          this.router.navigate(['dashboard']);\r\n        })\r\n      this.SetUserData(result.user);\r\n    }).catch((error) => {\r\n      window.alert(error)\r\n    })\r\n  }\r\n\r\n  /* Setting up user data when sign in with username/password, \r\n  sign up with username/password and sign in with social auth  \r\n  provider in Firestore database using AngularFirestore + AngularFirestoreDocument service */\r\n  SetUserData(user) {\r\n    const userRef: AngularFirestoreDocument<any> = this.afs.doc(`users/${user.uid}`);\r\n    const userData: User = {\r\n      uid: user.uid,\r\n      email: user.email,\r\n      displayName: user.displayName,\r\n      photoURL: user.photoURL,\r\n      emailVerified: user.emailVerified\r\n    }\r\n    return userRef.set(userData, {\r\n      merge: true\r\n    })\r\n  }\r\n\r\n  // Sign out \r\n  SignOut() {\r\n    return this.afAuth.signOut().then(() => {\r\n      localStorage.removeItem('user');\r\n      this.router.navigate(['sign-in']);\r\n    })\r\n  }\r\n\r\n}","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './Pages/LoginPage/login.component';\n\nconst routes: Routes = [{ path: '', component: LoginComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class LoginRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { LoginRoutingModule } from './login-routing.module';\nimport { LoginComponent } from './Pages/LoginPage/login.component';\nimport { AuthService } from './Services/Auth.service';\n\n\n\n@NgModule({\n  declarations: [LoginComponent],\n  imports: [\n    CommonModule,\n    LoginRoutingModule\n  ],\n  providers:[AuthService]\n})\nexport class LoginModule { }\n"]}